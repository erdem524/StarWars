{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user2.216512/projects/StarWars/src/Wars/components/Home/Films.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Segment, Grid, Image } from \"semantic-ui-react\";\nimport Img from \"./img.json\";\n\nfunction Films() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.results);\n      console.log(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  console.log(`wewe`, Img.episode_id);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        columns: 3,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            inverted: true,\n            textAlign: \"center\",\n            style: {\n              height: \"60px\",\n              fontSize: \"16px\",\n              marginTop: \"50px\"\n            },\n            children: [item.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui move reveal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"visible content\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Img.filter(m => m.title === item.title)[0].url,\n                class: \"ui large image\",\n                alt: \"poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hidden content\",\n              style: {\n                color: \"black\",\n                height: \"550px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Segment, {\n                children: [/*#__PURE__*/_jsxDEV(Segment, {\n                  piled: true,\n                  textAlign: \"center\",\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  style: {\n                    textAlign: \"justify\",\n                    textIndent: \"20px\"\n                  },\n                  children: item.opening_crawl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Director: \", item.director]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Producer: \", item.producer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Released: \", item.release_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, item.episode_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Films, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Films;\nexport default Films;\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/user2.216512/projects/StarWars/src/Wars/components/Home/Films.js"],"names":["React","useState","useEffect","Segment","Grid","Image","Img","Films","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","results","console","log","episode_id","message","map","item","height","fontSize","marginTop","title","filter","m","url","color","textAlign","textIndent","opening_crawl","director","producer","release_date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Segment, Grid, Image } from \"semantic-ui-react\";\nimport Img from \"./img.json\";\nfunction Films() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.results);\n          console.log(result.results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n  console.log(`wewe`, Img.episode_id);\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <Grid>\n        <Grid.Row columns={3}>\n          {items.map((item) => (\n            <Grid.Column key={item.episode_id}>\n              <Segment\n                raised\n                inverted\n                textAlign=\"center\"\n                style={{ height: \"60px\", fontSize: \"16px\", marginTop: \"50px\" }}\n              >\n                {item.title}{\" \"}\n              </Segment>\n              <div className=\"ui move reveal\">\n                <div className=\"visible content\">\n                  <img\n                    src={Img.filter((m) => m.title === item.title)[0].url}\n                    class=\"ui large image\"\n                    alt=\"poster\"\n                  />\n                </div>\n                <div\n                  class=\"hidden content\"\n                  style={{ color: \"black\", height: \"550px\" }}\n                >\n                  <Segment>\n                    <Segment piled textAlign=\"center\">\n                      {item.title}\n                    </Segment>\n                    <Segment\n                      vertical\n                      style={{ textAlign: \"justify\", textIndent: \"20px\" }}\n                    >\n                      {item.opening_crawl}\n                    </Segment>\n                    <Segment vertical>Director: {item.director}</Segment>\n                    <Segment vertical>Producer: {item.producer}</Segment>\n                    <Segment vertical>Released: {item.release_date}</Segment>\n                  </Segment>\n                </div>\n              </div>\n            </Grid.Column>\n          ))}\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Films;\n"]},"metadata":{},"sourceType":"module"}