{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user2.216512/projects/StarWars/src/Wars/components/Home/Films.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Segment, Grid, Image } from \"semantic-ui-react\";\nimport Img from \"./img.json\";\n\nfunction Films() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        columns: 3,\n        className: \"mediaQ\",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            inverted: true,\n            textAlign: \"center\",\n            style: {\n              height: \"60px\",\n              fontSize: \"16px\",\n              marginTop: \"50px\"\n            },\n            children: [item.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"ui move reveal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"visible content\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: Img.filter(m => m.title === item.title)[0].url,\n                class: \"ui large image\",\n                alt: \"poster\",\n                backgroundSize: \"100% 55%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hidden content\",\n              children: /*#__PURE__*/_jsxDEV(Segment, {\n                style: {\n                  color: \"black\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Segment, {\n                  piled: true,\n                  textAlign: \"center\",\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  style: {\n                    textAlign: \"justify\",\n                    textIndent: \"20px\"\n                  },\n                  children: item.opening_crawl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Director: \", item.director]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Producer: \", item.producer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Released: \", item.release_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, item.episode_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Films, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Films;\nexport default Films; // ${Img[index].url}\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/user2.216512/projects/StarWars/src/Wars/components/Home/Films.js"],"names":["React","useState","useEffect","Segment","Grid","Image","Img","Films","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","results","message","map","item","index","height","fontSize","marginTop","title","filter","m","url","color","textAlign","textIndent","opening_crawl","director","producer","release_date","episode_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Segment, Grid, Image } from \"semantic-ui-react\";\nimport Img from \"./img.json\";\nfunction Films() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <Grid>\n        <Grid.Row columns={3} className=\"mediaQ\">\n          {items.map((item, index) => (\n            <Grid.Column key={item.episode_id}>\n              <Segment\n                raised\n                inverted\n                textAlign=\"center\"\n                style={{ height: \"60px\", fontSize: \"16px\", marginTop: \"50px\" }}\n              >\n                {item.title}{\" \"}\n              </Segment>\n              <div class=\"ui move reveal\">\n                <div class=\"visible content\">\n                  <Image\n                    src={Img.filter((m) => m.title === item.title)[0].url}\n                    class=\"ui large image\"\n                    alt=\"poster\"\n                    backgroundSize=\"100% 55%\"\n                  />\n                </div>\n                <div class=\"hidden content\">\n                  <Segment style={{ color: \"black\" }}>\n                    <Segment piled textAlign=\"center\">\n                      {item.title}\n                    </Segment>\n                    <Segment\n                      vertical\n                      style={{ textAlign: \"justify\", textIndent: \"20px\" }}\n                    >\n                      {item.opening_crawl}\n                    </Segment>\n                    <Segment vertical>Director: {item.director}</Segment>\n                    <Segment vertical>Producer: {item.producer}</Segment>\n                    <Segment vertical>Released: {item.release_date}</Segment>\n                  </Segment>\n                </div>\n              </div>\n            </Grid.Column>\n          ))}\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Films;\n\n// ${Img[index].url}\n"]},"metadata":{},"sourceType":"module"}