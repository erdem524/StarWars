{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user2.216512/Desktop/dat-hius/src/starWars/Star.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Images from './img.json';\n\nfunction Star() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.results);\n      console.log(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Images.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"poster\",\n        src: img.url,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Array(6).fill(0).map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.title, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Director: \", item.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Producer: \", item.producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Released: \", item.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)]\n        }, item.episode_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"More Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this);\n  }\n}\n\n_s(Star, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Star;\nexport default Star;\n\nvar _c;\n\n$RefreshReg$(_c, \"Star\");","map":{"version":3,"sources":["/Users/user2.216512/Desktop/dat-hius/src/starWars/Star.js"],"names":["React","useState","useEffect","Images","Star","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","results","console","log","message","map","img","url","Array","fill","e","i","item","title","opening_crawl","director","producer","release_date","episode_id"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACE,OAAOC,MAAP,MAAmB,YAAnB;;AACF,SAASC,IAAT,GAAgB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACE,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAM,CAACC,OAAR,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,OAAnB;AACD,KAPL,EAQKX,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXL;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACc,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBAIF;AAAA,iBACEJ,MAAM,CAACiB,GAAP,CAAWC,GAAG,iBAAG;AAAM,QAAA,SAAS,EAAG,QAAlB;AAA2B,QAAA,GAAG,EAAEA,GAAG,CAACC,GAApC;AAAyC,QAAA,GAAG,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,cAAjB,CADF,eAQC;AAAA,kBACUC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,EAAiBJ,GAAjB,CAAqB,CAACK,CAAD,EAAGC,CAAH,kBAClB;AAAA,oBAAMA,CAAC,GAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADH;AADV;AAAA;AAAA;AAAA;AAAA,cARD,eAaE;AAAA,kBACGjB,KAAK,CAACW,GAAN,CAAUO,IAAI,iBACf;AAAA,qBACGA,IAAI,CAACC,KADR,eAGA;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA,qCAAcF,IAAI,CAACG,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAA,qCAAcH,IAAI,CAACI,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAA,qCAAcJ,IAAI,CAACK,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA,WAASL,IAAI,CAACM,UAAd;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE;AAiCD;AACF;;GA7DQ7B,I;;KAAAA,I;AA+DT,eAAeA,IAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n  import Images from './img.json'\nfunction Star() {\nconst [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.results);\n          console.log(result.results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n\n\n\n  <div>\n   {Images.map(img=> <img  className = \"poster\" src={img.url} alt={\"img\"} \n   \n   />\n   \n   \n   )}\n\n   <div>\n            {Array(6).fill(0).map((e,i)=>(\n                <div>{i+1}</div>\n            ))}\n        </div>\n    <ul>\n      {items.map(item => \n      <li key={item.episode_id}>\n        {item.title}\n       \n      <p>{item.opening_crawl}</p>\n      <p>Director: {item.director}</p>\n      <p>Producer: {item.producer}</p>\n      <p>Released: {item.release_date}</p>\n        </li>)}\n    </ul>\n    \n    <button>More Info</button>\n</div>\n\n    );\n  }\n}\n\nexport default Star\n"]},"metadata":{},"sourceType":"module"}