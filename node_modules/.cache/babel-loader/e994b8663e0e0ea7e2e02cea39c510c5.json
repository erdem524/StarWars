{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user2.216512/projects/StarWars/src/StarWars/components/Home/Films.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Segment, Grid, Image } from \"semantic-ui-react\";\nimport Img from \"./img.json\";\n\nfunction Films() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      columns: 3,\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          height: \"700px\",\n          color: \"black\",\n          border: \"1px solid red\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Segment, {\n          raised: true,\n          inverted: true,\n          textAlign: \"center\",\n          style: {\n            height: \"60px\",\n            fontSize: \"16px\",\n            marginTop: \"50px\"\n          },\n          children: [item.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"ui move reveal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"visible content\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: Img.filter(m => m.title === item.title)[0].url,\n              class: \"ui large image\",\n              alt: \"poster\",\n              height: \"490px\",\n              width: \"400px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"hidden content\",\n            children: /*#__PURE__*/_jsxDEV(Segment, {\n              children: [/*#__PURE__*/_jsxDEV(Segment, {\n                piled: true,\n                textAlign: \"center\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                vertical: true,\n                style: {\n                  textAlign: \"justify\",\n                  textIndent: \"20px\"\n                },\n                children: item.opening_crawl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                vertical: true,\n                children: [\"Director: \", item.director]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                vertical: true,\n                children: [\"Producer: \", item.producer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                vertical: true,\n                children: [\"Released: \", item.release_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, item.episode_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Films, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Films;\nexport default Films; // ${Img[index].url}\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/user2.216512/projects/StarWars/src/StarWars/components/Home/Films.js"],"names":["React","useState","useEffect","Segment","Grid","Image","Img","Films","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","results","message","map","item","index","height","color","border","fontSize","marginTop","title","filter","m","url","textAlign","textIndent","opening_crawl","director","producer","release_date","episode_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Segment, Grid, Image } from \"semantic-ui-react\";\nimport Img from \"./img.json\";\nfunction Films() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <Grid stackable columns={3}>\n        {items.map((item, index) => (\n          <Grid.Column\n            style={{\n              height: \"700px\",\n              color: \"black\",\n              border: \"1px solid red\",\n            }}\n            key={item.episode_id}\n          >\n            <Segment\n              raised\n              inverted\n              textAlign=\"center\"\n              style={{ height: \"60px\", fontSize: \"16px\", marginTop: \"50px\" }}\n            >\n              {item.title}{\" \"}\n            </Segment>\n            <div class=\"ui move reveal\">\n              <div class=\"visible content\">\n                <Image\n                  src={Img.filter((m) => m.title === item.title)[0].url}\n                  class=\"ui large image\"\n                  alt=\"poster\"\n                  height=\"490px\"\n                  width=\"400px\"\n                />\n              </div>\n              <div class=\"hidden content\">\n                <Segment>\n                  <Segment piled textAlign=\"center\">\n                    {item.title}\n                  </Segment>\n                  <Segment\n                    vertical\n                    style={{ textAlign: \"justify\", textIndent: \"20px\" }}\n                  >\n                    {item.opening_crawl}\n                  </Segment>\n                  <Segment vertical>Director: {item.director}</Segment>\n                  <Segment vertical>Producer: {item.producer}</Segment>\n                  <Segment vertical>Released: {item.release_date}</Segment>\n                </Segment>\n              </div>\n            </div>\n          </Grid.Column>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default Films;\n\n// ${Img[index].url}\n"]},"metadata":{},"sourceType":"module"}