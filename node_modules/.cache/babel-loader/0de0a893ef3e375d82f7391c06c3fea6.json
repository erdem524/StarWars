{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user2.216512/projects/StarWars/src/Wars/components/Home/Films.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Segment, Grid, Image } from 'semantic-ui-react';\nimport Img from \"./img.json\";\n\nfunction Films() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.results);\n      console.log(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  console.log(`wewe`, Img.episode_id);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        columns: 3,\n        className: \"mediaQ\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            inverted: true,\n            textAlign: \"center\",\n            style: {\n              height: \"60px\",\n              fontSize: \"16px\",\n              marginTop: \"50px\"\n            },\n            children: [item.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"ui move reveal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"visible content\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"https://i.pinimg.com/564x/40/8f/9c/408f9cbce12f9d9adeb6b5638c9e2475.jpg\",\n                class: \"ui large image\",\n                alt: \"poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hidden content\",\n              children: /*#__PURE__*/_jsxDEV(Segment, {\n                style: {\n                  color: \"black\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Segment, {\n                  piled: true,\n                  textAlign: \"center\",\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  style: {\n                    textAlign: 'justify',\n                    textIndent: \"20px\"\n                  },\n                  children: item.opening_crawl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Director: \", item.director]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Producer: \", item.producer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                  vertical: true,\n                  children: [\"Released: \", item.release_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, item.episode_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this);\n  }\n}\n\n_s(Films, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Films;\nexport default Films;\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/user2.216512/projects/StarWars/src/Wars/components/Home/Films.js"],"names":["React","useState","useEffect","Segment","Grid","Image","Img","Films","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","results","console","log","episode_id","message","map","item","height","fontSize","marginTop","title","color","textAlign","textIndent","opening_crawl","director","producer","release_date"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport {Segment,Grid,Image} from 'semantic-ui-react'\nimport Img from \"./img.json\"\nfunction Films() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.results);\n          console.log(result.results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n  console.log(`wewe`,Img.episode_id)\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n  <Grid>\n    <Grid.Row columns={3} className=\"mediaQ\">\n{items.map(item => \n      <Grid.Column key={item.episode_id}>\n        <Segment raised inverted textAlign='center' style={{height:\"60px\", fontSize:\"16px\",marginTop:\"50px\"}}>{item.title} </Segment>\n            <div class=\"ui move reveal\">\n                <div class=\"visible content\">\n                    <Image  src=\"https://i.pinimg.com/564x/40/8f/9c/408f9cbce12f9d9adeb6b5638c9e2475.jpg\"  class=\"ui large image\" alt=\"poster\"/>\n                </div>\n                <div class=\"hidden content\">\n                      <Segment style={{color:\"black\"}}>\n                          <Segment piled textAlign='center'>{item.title}</Segment>\n                          <Segment vertical style={{textAlign: 'justify', textIndent: \"20px\"}}>{item.opening_crawl}</Segment>\n                          <Segment vertical>Director: {item.director}</Segment >\n                          <Segment vertical>Producer: {item.producer}</Segment >\n                          <Segment vertical>Released: {item.release_date}</Segment>\n                      </Segment>\n                </div>\n            </div>\n        </Grid.Column>)} \n    </Grid.Row>\n</Grid>\n    \n    );\n  }\n}\n\nexport default Films\n"]},"metadata":{},"sourceType":"module"}